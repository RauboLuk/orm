{"version":3,"sources":["logo.svg","components/header.tsx","components/signIn.tsx","components/signUp.tsx","App.tsx","index.tsx"],"names":["Header","className","src","logo","alt","width","data-testid","loginSchema","object","email","string","password","nonempty","SignIn","useForm","resolver","zodResolver","register","errors","formState","handleSubmit","onSubmit","values","console","log","alert","htmlFor","type","id","placeholder","required","message","to","signUpSchema","name","regex","min","passwordConfirmation","refine","data","path","SignUp","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3f3ca8d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"../logo.svg\";\r\nimport \"./header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"Header\">\r\n      <img src={logo} className=\"Header__logo\" alt=\"logo\" width=\"200px\" data-testid=\"logo\" />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { object, string, TypeOf } from \"zod\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst loginSchema = object({\r\n  email: string().email(\"Invalid email address\"),\r\n  password: string().nonempty(\"Password is required\"),\r\n});\r\n\r\ntype LoginInput = TypeOf<typeof loginSchema>;\r\n\r\nconst SignIn = () => {\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n  } = useForm<LoginInput>({\r\n    resolver: zodResolver(loginSchema),\r\n  });\r\n\r\n  const onSubmit = (values: LoginInput) => {\r\n    console.log(values);\r\n    alert(\"OK\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"container__title\">Sign in</h1>\r\n      <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form__input\">\r\n          <label htmlFor=\"email\">E-mail address</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Enter your email address...\"\r\n            {...register(\"email\")}\r\n            required\r\n          />\r\n          <p className=\"input__error\">{errors.email?.message}</p>\r\n        </div>\r\n        <div className=\"form__input\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Enter your password...\"\r\n            {...register(\"password\")}\r\n            required\r\n          />\r\n          <p className=\"input__error\">{errors.password?.message}</p>\r\n        </div>\r\n        <button className=\"form__continue\" type=\"submit\">\r\n          Continue\r\n        </button>\r\n      </form>\r\n      <p className=\"container__footer\">\r\n        Not out member yet?{\" \"}\r\n        <Link className=\"underline\" to=\"/signUp\">\r\n          Click here to create new account\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { object, string, TypeOf } from \"zod\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst signUpSchema = object({\r\n  email: string().nonempty(\"Email is required\").email(\"Invalid email address\"),\r\n  name: string()\r\n    .nonempty(\"Full name is required\")\r\n    .regex(/\\S+( +\\S+)+/, \"Missing last name\"),\r\n  password: string()\r\n    .nonempty(\"Password is required\")\r\n    .min(8, \"Password is too short\"),\r\n  passwordConfirmation: string().nonempty(\"Please confirm your password\"),\r\n}).refine((data) => data.password === data.passwordConfirmation, {\r\n  message: \"Please confirm your password\",\r\n  path: [\"passwordConfirmation\"],\r\n});\r\n\r\ntype SignUpInput = TypeOf<typeof signUpSchema>;\r\n\r\nconst SignUp = () => {\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n  } = useForm<SignUpInput>({\r\n    resolver: zodResolver(signUpSchema),\r\n  });\r\n\r\n  const onSubmit = (values: SignUpInput) => {\r\n    console.log(values);\r\n    alert(\"OK\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"container__title\">Sign up</h1>\r\n      <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form__input\">\r\n          <label htmlFor=\"email\">E-mail address</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Enter your email address...\"\r\n            {...register(\"email\")}\r\n            required\r\n          />\r\n          <p className=\"input__error\">{errors.email?.message}</p>\r\n        </div>\r\n        <div className=\"form__input\">\r\n          <label htmlFor=\"name\">Full name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            placeholder=\"Enter your full name...\"\r\n            {...register(\"name\")}\r\n            required\r\n          />\r\n          <p className=\"input__error\">{errors.name?.message}</p>\r\n        </div>\r\n        <div className=\"form__input\">\r\n          <label htmlFor=\"password\" data-testid=\"passwordLabel\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Enter your password...\"\r\n            {...register(\"password\")}\r\n            required\r\n            data-testid=\"passwordInput\"\r\n          />\r\n          <p className=\"input__error\">{errors.password?.message}</p>\r\n        </div>\r\n        <div className=\"form__input\">\r\n          <label htmlFor=\"password\">Confirm your password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"passwordConfirmation\"\r\n            placeholder=\"Confirm your password...\"\r\n            {...register(\"passwordConfirmation\")}\r\n            required\r\n          />\r\n          <p className=\"input__error\">{errors.passwordConfirmation?.message}</p>\r\n        </div>\r\n        <button className=\"form__continue\" type=\"submit\">\r\n          Continue\r\n        </button>\r\n      </form>\r\n      <p className=\"container__footer\">\r\n        Already using our app?{\" \"}\r\n        <Link className=\"underline\" to=\"/signIn\">\r\n          Click here to sign in\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/header\";\nimport SignIn from \"./components/signIn\";\nimport SignUp from \"./components/signUp\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app\">\n        <Header />\n        <main className=\"content\">\n          <Switch>\n            <Route path=\"/signUp\">\n              <SignUp />\n            </Route>\n            <Route path=\"/\">\n              <SignIn />\n            </Route>\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}